/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import Clases.ClienteSoda;
import Clases.ListaClientes;
import Conexion.Conexion;
import General.AccionServidora;
import General.Peticion;
import javax.swing.JFrame;
import java.io.File;  
import java.io.FileInputStream;  
import java.io.FileNotFoundException;
import java.io.IOException;  
import javax.swing.JOptionPane;
import org.apache.poi.xssf.usermodel.XSSFSheet;  
import org.apache.poi.xssf.usermodel.XSSFWorkbook;  
import org.apache.poi.ss.usermodel.Cell;  
import org.apache.poi.ss.usermodel.FormulaEvaluator;  
import org.apache.poi.ss.usermodel.Row;  

/**
 *
 * @author jcard
 */
public class VentanaInicialSoda extends javax.swing.JFrame {
    
    
    static ListaClientes clientesSoda = new ListaClientes();
    
    /**
     * Creates new form VentanaInicialSoda
     */
    public VentanaInicialSoda() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        canvas1 = new java.awt.Canvas();
        label1 = new java.awt.Label();
        jLabel1 = new javax.swing.JLabel();
        LabelContra = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        InputCorreoCliente = new java.awt.TextField();
        LabelCorreo = new javax.swing.JLabel();
        BIngresar = new java.awt.Button();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        BRegistrarseCliente = new java.awt.Button();
        BAbrirLoginAdmin = new java.awt.Button();
        InputContraCliente = new javax.swing.JPasswordField();

        label1.setText("label1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 153, 102));
        jLabel1.setText("Bienvenido a la Soda de Erisolfer!");

        LabelContra.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        LabelContra.setText("Contraseña: ");

        jLabel3.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel3.setText("LOGIN DE CLIENTE");

        InputCorreoCliente.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        InputCorreoCliente.setName(""); // NOI18N
        InputCorreoCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InputCorreoClienteActionPerformed(evt);
            }
        });

        LabelCorreo.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        LabelCorreo.setText("Correo Eléctrónico: ");

        BIngresar.setBackground(new java.awt.Color(204, 204, 204));
        BIngresar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        BIngresar.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        BIngresar.setForeground(new java.awt.Color(51, 51, 51));
        BIngresar.setLabel("Ingresar al Sistema");
        BIngresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BIngresarActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel5.setText("¿No tiene Cuenta?");

        jLabel6.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel6.setText("¿Administrador?");

        BRegistrarseCliente.setBackground(new java.awt.Color(204, 204, 204));
        BRegistrarseCliente.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        BRegistrarseCliente.setLabel("Registrarse");
        BRegistrarseCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BRegistrarseClienteActionPerformed(evt);
            }
        });

        BAbrirLoginAdmin.setBackground(new java.awt.Color(204, 204, 204));
        BAbrirLoginAdmin.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        BAbrirLoginAdmin.setLabel("Login");
        BAbrirLoginAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BAbrirLoginAdminActionPerformed(evt);
            }
        });

        InputContraCliente.setBackground(new java.awt.Color(255, 255, 255));
        InputContraCliente.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        InputContraCliente.setForeground(new java.awt.Color(0, 0, 0));
        InputContraCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InputContraClienteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(BRegistrarseCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(BAbrirLoginAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20))))
            .addGroup(layout.createSequentialGroup()
                .addGap(142, 142, 142)
                .addComponent(LabelContra)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(BIngresar, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(InputCorreoCliente, javax.swing.GroupLayout.DEFAULT_SIZE, 356, Short.MAX_VALUE)
                    .addComponent(InputContraCliente))
                .addContainerGap(37, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(109, 109, 109))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(88, 88, 88)
                    .addComponent(LabelCorreo)
                    .addContainerGap(408, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jLabel1)
                .addGap(47, 47, 47)
                .addComponent(jLabel3)
                .addGap(59, 59, 59)
                .addComponent(InputCorreoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LabelContra, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(InputContraCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(56, 56, 56)
                .addComponent(BIngresar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5))
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(BAbrirLoginAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BRegistrarseCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(44, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(198, 198, 198)
                    .addComponent(LabelCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(334, Short.MAX_VALUE)))
        );

        BIngresar.getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    // Función para leer el archivo de clientes
    private static void CargarDocumentoClientes() throws FileNotFoundException, IOException{
        
        // Se abre el archivo llamado InformaciÃ³n y credenciales de los clientes
        FileInputStream archivo = new FileInputStream("ClientesSoda.xlsx");
        XSSFWorkbook libro = new XSSFWorkbook(archivo);
        
        // Se abre la hoja deseada del archivo
        XSSFSheet hoja = libro.getSheetAt(0);
        
        // Se obtiene la cantidad de filas con informaciÃ³n dentro del archivo
        int numero_Filas = hoja.getLastRowNum();
       
        // Se va a generar un ciclo que se repetirá¡ hasta que se haya llegado al lí­mite de filas
        // Se comienza de 2 para ignorar el header y el admin
        for(int i =2;i <= numero_Filas; i++){
            
            // Se obtiene la fila en ese í­ndice
            Row fila = hoja.getRow(i);
            
            // Se obtiene la cantidad de columnas en la fila
            int numero_Columnas = fila.getLastCellNum();
            
            // Se crea un nuevo objeto cliente de soda donde guardar los datos de la fila actual
            ClienteSoda nuevo = new ClienteSoda();
            
            // Por cada columna existente dentro de la fila se van a sacar sus datos
            for(int j = 0; j < numero_Columnas; j++){
                
                // Se obtienen los datos de la celda en esa fila y esa columna
                Cell celda = fila.getCell(j);
                
                // Dependiendo de la fila se leerá un dato diferente del cliente
                
                switch(j){
                    
                    // Caso de el codigo del cliente
                    case 0:
                        double numCod = celda.getNumericCellValue();
                        nuevo.setCodigo(Double.toString(numCod));
                        break;
                    
                    case 1:
                        nuevo.setNombre(celda.getStringCellValue());
                        break;
                        
                    case 2:
                        nuevo.setApellido(celda.getStringCellValue());
                        break;
                    case 3:
                        nuevo.setNumero(celda.getStringCellValue());
                        break;
                    case 4:
                        nuevo.setCorreo(celda.getStringCellValue());
                        break;
                    case 5:
                        nuevo.setContraseña(celda.getStringCellValue());
                        break;
                }
            }
            clientesSoda.agregarCliente(nuevo);
        }
    }
    
    private void InputCorreoClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InputCorreoClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_InputCorreoClienteActionPerformed

    private void BRegistrarseClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BRegistrarseClienteActionPerformed
        // TODO add your handling code here:
        Peticion peticionIngresar = new Peticion(AccionServidora.ABRIR_LOGIN_ADMIN, "" );
        
        Conexion conexion = new Conexion(peticionIngresar);

        boolean respuesta = (boolean) conexion.getRespuestaServer();

        if(respuesta){
            JFrame parentFrame =  (JFrame) this.getParent();
            RegistroCliente nueva = new RegistroCliente(parentFrame, true);
            nueva.setVisible(true);  
        }
        else{
        }
    }//GEN-LAST:event_BRegistrarseClienteActionPerformed

    private void BAbrirLoginAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BAbrirLoginAdminActionPerformed
       
        // TODO add your handling code here:
        Peticion peticionIngresar = new Peticion(AccionServidora.ABRIR_LOGIN_ADMIN, "" );
        
        Conexion conexion = new Conexion(peticionIngresar);

        boolean respuesta = (boolean) conexion.getRespuestaServer();

        if(respuesta){
            JFrame parentFrame =  (JFrame) this.getParent();
            LoginAdmin nueva = new LoginAdmin(parentFrame, true);
            nueva.setVisible(true);  
        }
        else{
        }
        
    }//GEN-LAST:event_BAbrirLoginAdminActionPerformed

    private void InputContraClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InputContraClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_InputContraClienteActionPerformed

    private void BIngresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BIngresarActionPerformed
        
        // Se envía al servidor la petición para poder ingresar al menú del cliente con el correo
        
        // Se crea un arreglo para almacenar el texto que se desea enviar
        String[] datosEnviarTexto = new String[2];
        // Se obtienen los inputs de la ventana de login de cliente
        datosEnviarTexto[0] = InputCorreoCliente.getText();
        datosEnviarTexto[1] = InputContraCliente.getText();
        
        // Se le pide al servidor que deje al cliente entrar al sistema
        Peticion peticionIngresar = new Peticion(AccionServidora.LOGIN_USUARIO, datosEnviarTexto);
        Conexion conexion = new Conexion(peticionIngresar);
        String respuesta = (String) conexion.getRespuestaServer();
        
        // Si el correo enviado estaba mal en cuanto a formato
        if(respuesta.equals("CorreoInc")){
            
            // Se creará una caja con un mensaje de error
            JOptionPane.showMessageDialog(null, "Por favor inserte un correo válido para continuar...");
            
        }
        else if(respuesta.equals("ContraVac")){
            // Se creará una caja con un mensaje de error
            JOptionPane.showMessageDialog(null, "Por favor inserte una contraseña para continuar...");
        }
        
        
        // Si todo esta correcto se ingresa al cliente al menú
        else{
            boolean encontrado = false;
            
            // Si las credenciales están bien se revisa que el cliente exista en la lista
            for (ClienteSoda actual: clientesSoda.getListaClientes()){
                
                if (actual.getCorreo().equals(datosEnviarTexto[0]) && actual.getContraseña().equals(datosEnviarTexto[1])){
                    encontrado = true;
                    JFrame parentFrame =  (JFrame) this.getParent();
                    MenuPrincipalCliente nueva = new MenuPrincipalCliente(parentFrame, true, actual.getNombre());
                    nueva.setVisible(true);
                }
            }
            if (!encontrado){
                // Si no se encontro un usuario con esas credenciales
                // Se creará una caja con un mensaje de error
                JOptionPane.showMessageDialog(null, "No existe un usuario con estas credenciales, verifique que ingreso los datos correctos");
            }
        } 
    }//GEN-LAST:event_BIngresarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws IOException {
        
        // Se intenta leer el archivo de registro de clientes
        try{
            CargarDocumentoClientes(); 
        }
        catch(NullPointerException ex){System.out.println("-2");}
        
        for (ClienteSoda actual: clientesSoda.getListaClientes()){
            System.out.println("Se agrego: " +actual.getNombre() + " " + actual.getApellido());
        }
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaInicialSoda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaInicialSoda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaInicialSoda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaInicialSoda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaInicialSoda().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Button BAbrirLoginAdmin;
    private java.awt.Button BIngresar;
    private java.awt.Button BRegistrarseCliente;
    private javax.swing.JPasswordField InputContraCliente;
    private java.awt.TextField InputCorreoCliente;
    private javax.swing.JLabel LabelContra;
    private javax.swing.JLabel LabelCorreo;
    private java.awt.Canvas canvas1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private java.awt.Label label1;
    // End of variables declaration//GEN-END:variables
}
